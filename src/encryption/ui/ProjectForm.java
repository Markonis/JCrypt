/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package encryption.ui;

import encryption.Configuration;
import encryption.EncryptionWorker;
import encryption.watcher.InputFolderWatcher;
import encryption.watcher.OutputFolderWatcher;
import encryption.Project;
import encryption.algorithm.Algorithm;
import encryption.algorithm.DoubleTransposition;
import encryption.algorithm.Election1876Cipher;
import java.io.File;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author marko
 */
public class ProjectForm extends javax.swing.JPanel {

    
    private InputFolderWatcher inputWatcher;
    private OutputFolderWatcher outputWatcher;
    private EncryptionWorker worker;
    
    /**
     * Creates new form ProjectForm
     */
    public ProjectForm() {
        initComponents();
        worker = new EncryptionWorker(project);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        inputFolderChooser = new javax.swing.JFileChooser();
        outputFolderChooser = new javax.swing.JFileChooser();
        algorithmConfigurationChooser = new javax.swing.JFileChooser();
        project = new encryption.Project();
        inputFolderTextField = new javax.swing.JTextField();
        outputFolderTextField = new javax.swing.JTextField();
        chooseInputFolderButton = new javax.swing.JButton();
        chooseOutputFolderButton = new javax.swing.JButton();
        inputFolderLabel = new javax.swing.JLabel();
        outputFolderLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        algorithmLabel = new javax.swing.JLabel();
        algorithmComboBox = new javax.swing.JComboBox();
        chooseAlgorithmConfigurationButton = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        filesSplitPane = new javax.swing.JSplitPane();
        leftPanel = new javax.swing.JPanel();
        inputFilesLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        inputFilesList = new javax.swing.JList();
        encryptSelectedButton = new javax.swing.JButton();
        showOriginalButton = new javax.swing.JButton();
        rightPanel = new javax.swing.JPanel();
        outputFilesLabel = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        outputFilesList = new javax.swing.JList();
        decryptSelectedButton = new javax.swing.JButton();
        showEncryptedButton = new javax.swing.JButton();

        inputFolderChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, org.jdesktop.beansbinding.ELProperty.create("${inputFolder}"), inputFolderChooser, org.jdesktop.beansbinding.BeanProperty.create("selectedFile"));
        bindingGroup.addBinding(binding);

        outputFolderChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, org.jdesktop.beansbinding.ELProperty.create("${outputFolder}"), outputFolderChooser, org.jdesktop.beansbinding.BeanProperty.create("selectedFile"));
        bindingGroup.addBinding(binding);

        inputFolderTextField.setEditable(false);
        inputFolderTextField.setDoubleBuffered(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, org.jdesktop.beansbinding.ELProperty.create("${inputFolder.absolutePath}"), inputFolderTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        outputFolderTextField.setEditable(false);
        outputFolderTextField.setDoubleBuffered(true);

        binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, org.jdesktop.beansbinding.ELProperty.create("${outputFolder.absolutePath}"), outputFolderTextField, org.jdesktop.beansbinding.BeanProperty.create("text"));
        bindingGroup.addBinding(binding);

        chooseInputFolderButton.setText("Browse");
        chooseInputFolderButton.setDoubleBuffered(true);
        chooseInputFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseInputFolderButtonActionPerformed(evt);
            }
        });

        chooseOutputFolderButton.setText("Browse");
        chooseOutputFolderButton.setDoubleBuffered(true);
        chooseOutputFolderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseOutputFolderButtonActionPerformed(evt);
            }
        });

        inputFolderLabel.setText("Input Folder");
        inputFolderLabel.setDoubleBuffered(true);

        outputFolderLabel.setText("Output Folder");
        outputFolderLabel.setDoubleBuffered(true);

        jSeparator1.setDoubleBuffered(true);

        algorithmLabel.setText("Encryption Algorithm");
        algorithmLabel.setDoubleBuffered(true);

        algorithmComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Election 1876 Cipher", "Double Transposition" }));
        algorithmComboBox.setDoubleBuffered(true);

        chooseAlgorithmConfigurationButton.setText("Browse Configuration");
        chooseAlgorithmConfigurationButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseAlgorithmConfigurationButtonActionPerformed(evt);
            }
        });

        jSeparator2.setDoubleBuffered(true);

        filesSplitPane.setDividerLocation(350);
        filesSplitPane.setDoubleBuffered(true);

        inputFilesLabel.setText("Input Files");
        inputFilesLabel.setDoubleBuffered(true);

        jScrollPane3.setDoubleBuffered(true);

        inputFilesList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        inputFilesList.setDoubleBuffered(true);

        org.jdesktop.beansbinding.ELProperty eLProperty = org.jdesktop.beansbinding.ELProperty.create("${inputFiles}");
        org.jdesktop.swingbinding.JListBinding jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, eLProperty, inputFilesList);
        bindingGroup.addBinding(jListBinding);

        jScrollPane3.setViewportView(inputFilesList);

        encryptSelectedButton.setText("Encrypt Selected");
        encryptSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptSelectedButtonActionPerformed(evt);
            }
        });

        showOriginalButton.setText("Show Original");
        showOriginalButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showOriginalButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout leftPanelLayout = new javax.swing.GroupLayout(leftPanel);
        leftPanel.setLayout(leftPanelLayout);
        leftPanelLayout.setHorizontalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(leftPanelLayout.createSequentialGroup()
                        .addComponent(inputFilesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(encryptSelectedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showOriginalButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane3))
                .addContainerGap())
        );
        leftPanelLayout.setVerticalGroup(
            leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(leftPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(leftPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputFilesLabel)
                    .addComponent(encryptSelectedButton)
                    .addComponent(showOriginalButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );

        filesSplitPane.setLeftComponent(leftPanel);

        outputFilesLabel.setText("Output Files");
        outputFilesLabel.setDoubleBuffered(true);

        jScrollPane4.setDoubleBuffered(true);

        outputFilesList.setDoubleBuffered(true);

        eLProperty = org.jdesktop.beansbinding.ELProperty.create("${outputFiles}");
        jListBinding = org.jdesktop.swingbinding.SwingBindings.createJListBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, project, eLProperty, outputFilesList);
        bindingGroup.addBinding(jListBinding);

        jScrollPane4.setViewportView(outputFilesList);

        decryptSelectedButton.setText("Decrypt Selected");
        decryptSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decryptSelectedButtonActionPerformed(evt);
            }
        });

        showEncryptedButton.setText("Show Encrypted");
        showEncryptedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showEncryptedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout rightPanelLayout = new javax.swing.GroupLayout(rightPanel);
        rightPanel.setLayout(rightPanelLayout);
        rightPanelLayout.setHorizontalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(rightPanelLayout.createSequentialGroup()
                        .addComponent(outputFilesLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(decryptSelectedButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(showEncryptedButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 402, Short.MAX_VALUE))
                .addContainerGap())
        );
        rightPanelLayout.setVerticalGroup(
            rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(rightPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(rightPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFilesLabel)
                    .addComponent(decryptSelectedButton)
                    .addComponent(showEncryptedButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 455, Short.MAX_VALUE)
                .addContainerGap())
        );

        filesSplitPane.setRightComponent(rightPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(filesSplitPane, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(outputFolderLabel)
                            .addComponent(inputFolderLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(outputFolderTextField)
                            .addComponent(inputFolderTextField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chooseInputFolderButton, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(chooseOutputFolderButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(algorithmLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(algorithmComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chooseAlgorithmConfigurationButton)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(inputFolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseInputFolderButton)
                    .addComponent(inputFolderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(outputFolderTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseOutputFolderButton)
                    .addComponent(outputFolderLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(algorithmLabel)
                    .addComponent(algorithmComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chooseAlgorithmConfigurationButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filesSplitPane)
                .addContainerGap())
        );

        bindingGroup.bind();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseInputFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseInputFolderButtonActionPerformed
        int ret = inputFolderChooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION){
            project.setInputFolder(inputFolderChooser.getSelectedFile());
            if(inputWatcher != null) inputWatcher.setWatch(false);
            inputWatcher = new InputFolderWatcher(project, worker);
            inputWatcher.start();
            worker.start();
            worker.addDiff();
        }
    }//GEN-LAST:event_chooseInputFolderButtonActionPerformed

    private void chooseOutputFolderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseOutputFolderButtonActionPerformed
        int ret = outputFolderChooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION){
            project.setOutputFolder(outputFolderChooser.getSelectedFile());
            if(outputWatcher != null) outputWatcher.setWatch(false);
            outputWatcher = new OutputFolderWatcher(project);
            outputWatcher.start();
            worker.addDiff();
        }
    }//GEN-LAST:event_chooseOutputFolderButtonActionPerformed

    private void chooseAlgorithmConfigurationButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chooseAlgorithmConfigurationButtonActionPerformed
        int ret = algorithmConfigurationChooser.showOpenDialog(this);
        if(ret == JFileChooser.APPROVE_OPTION){
            try {
                Configuration configuration = new Configuration(algorithmConfigurationChooser.getSelectedFile());
                String algorithmName = algorithmComboBox.getSelectedItem().toString();
                if("Election 1876 Cipher".equals(algorithmName)){
                    project.setAlgorithm(new Election1876Cipher(configuration));
                }else if("Double Transposition".equals(algorithmName)){
                    project.setAlgorithm(new DoubleTransposition(configuration));
                }else{
                    project.setAlgorithm(new Algorithm(configuration));
                }
                worker.addDiff();
            } catch (Exception ex) {
                Logger.getLogger(ProjectForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_chooseAlgorithmConfigurationButtonActionPerformed

    private void encryptSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptSelectedButtonActionPerformed
        File file = (File) inputFilesList.getModel().getElementAt(inputFilesList.getSelectedIndex());
        project.encrypt(file);
    }//GEN-LAST:event_encryptSelectedButtonActionPerformed

    private void decryptSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decryptSelectedButtonActionPerformed
        File file = (File) outputFilesList.getModel().getElementAt(outputFilesList.getSelectedIndex());
//        PreviewForm preview = new PreviewForm(project.decrypt(file));
//        preview.setVisible(true);
    }//GEN-LAST:event_decryptSelectedButtonActionPerformed

    private void showEncryptedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showEncryptedButtonActionPerformed
        File file = (File) outputFilesList.getModel().getElementAt(outputFilesList.getSelectedIndex());
        PreviewForm preview = new PreviewForm(project.readFile(file));
        preview.setVisible(true);
    }//GEN-LAST:event_showEncryptedButtonActionPerformed

    private void showOriginalButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showOriginalButtonActionPerformed
        File file = (File) inputFilesList.getModel().getElementAt(inputFilesList.getSelectedIndex());
        PreviewForm preview = new PreviewForm(project.readFile(file));
        preview.setVisible(true);
    }//GEN-LAST:event_showOriginalButtonActionPerformed

    public Project getProject() {
        return project;
    }
    
    public void setProject(Project project) {
        this.project = project;
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox algorithmComboBox;
    private javax.swing.JFileChooser algorithmConfigurationChooser;
    private javax.swing.JLabel algorithmLabel;
    private javax.swing.JButton chooseAlgorithmConfigurationButton;
    private javax.swing.JButton chooseInputFolderButton;
    private javax.swing.JButton chooseOutputFolderButton;
    private javax.swing.JButton decryptSelectedButton;
    private javax.swing.JButton encryptSelectedButton;
    private javax.swing.JSplitPane filesSplitPane;
    private javax.swing.JLabel inputFilesLabel;
    private javax.swing.JList inputFilesList;
    private javax.swing.JFileChooser inputFolderChooser;
    private javax.swing.JLabel inputFolderLabel;
    private javax.swing.JTextField inputFolderTextField;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel leftPanel;
    private javax.swing.JLabel outputFilesLabel;
    private javax.swing.JList outputFilesList;
    private javax.swing.JFileChooser outputFolderChooser;
    private javax.swing.JLabel outputFolderLabel;
    private javax.swing.JTextField outputFolderTextField;
    private encryption.Project project;
    private javax.swing.JPanel rightPanel;
    private javax.swing.JButton showEncryptedButton;
    private javax.swing.JButton showOriginalButton;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
